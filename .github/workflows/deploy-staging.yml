name: Deploy to Azure Web App (staging)

on:
  push:
    branches: [ "main" ]
    paths:
      - 'webapp/**'
      - '.github/workflows/deploy-staging.yml'

env:
  AZURE_WEBAPP_NAME: playground-web-dev-wiehcnax
  AZURE_WEBAPP_SLOT: staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: staging-deploy
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: webapp/package-lock.json

      - name: Install deps
        working-directory: webapp
        run: npm ci

      - name: Package app
        run: |
          cd webapp
          zip -r ../app.zip . -x ".git/*" "node_modules/*"
          ls -lh ../app.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-zip
          path: app.zip

      - name: Check package exists
        run: ls -lh app.zip

      - name: Deploy to staging via Kudu ZipDeploy (publish profile)
        env:
          PUBLISH_XML: ${{ secrets.AZURE_STAGING_PUBLISH_PROFILE }}
        run: |
          python3 - <<'PY'
          import os, re, sys, xml.etree.ElementTree as ET
          xml = os.environ['PUBLISH_XML']
          root = ET.fromstring(xml)
          # Pick the ZipDeploy profile from the staging slot secret
          prof = next(p for p in root.iter('publishProfile') if p.get('publishMethod')=='ZipDeploy')
          url = prof.get('publishUrl')
          user = prof.get('userName')
          pwd = prof.get('userPWD')
          host = re.sub(r':443$', '', url)
          kudu = f"https://{host}/api/zipdeploy?isAsync=true"
          # write out env for bash to read
          print(f"KUDU_URL={kudu}")
          print(f"KUDU_USER={user}")
          print(f"KUDU_PWD={pwd}")
          PY
          # Export variables from python stdout
          eval $(python3 - <<'PY'
          import os, re, sys, xml.etree.ElementTree as ET
          xml = os.environ['PUBLISH_XML']
          root = ET.fromstring(xml)
          prof = next(p for p in root.iter('publishProfile') if p.get('publishMethod')=='ZipDeploy')
          url = prof.get('publishUrl')
          user = prof.get('userName')
          pwd = prof.get('userPWD')
          host = re.sub(r':443$', '', url)
          kudu = f"https://{host}/api/zipdeploy?isAsync=true"
          print(f"echo KUDU_URL={kudu}")
          print(f"echo KUDU_USER={user}")
          print(f"echo KUDU_PWD={pwd}")
          print(f"export KUDU_URL='{kudu}'")
          print(f"export KUDU_USER='{user}'")
          print(f"export KUDU_PWD='{pwd}'")
          PY)
          # Deploy the zip using basic auth against Kudu
          curl -fSL -u "$KUDU_USER:$KUDU_PWD" \
            -H "Content-Type: application/zip" \
            --data-binary @app.zip \
            "$KUDU_URL"

      - name: Smoke test (health)
        run: |
          curl -fsS "https://${{ env.AZURE_WEBAPP_NAME }}-${{ env.AZURE_WEBAPP_SLOT }}.azurewebsites.net/health"

      - name: Smoke test (/)
        run: |
          curl -fsS "https://${{ env.AZURE_WEBAPP_NAME }}-${{ env.AZURE_WEBAPP_SLOT }}.azurewebsites.net/" | jq .