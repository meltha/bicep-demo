{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.38.5.1644",
      "templateHash": "11391506927739807106"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "deployerObjectId": {
      "type": "string",
      "metadata": {
        "description": "Object ID of the user running the deployment (for Key Vault break-glass)."
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "test",
        "prod"
      ],
      "metadata": {
        "description": "Environment tag"
      }
    },
    "baseName": {
      "type": "string",
      "defaultValue": "playground",
      "metadata": {
        "description": "Short base name (letters/numbers). Used to build resource names."
      }
    }
  },
  "variables": {
    "hash": "[uniqueString(resourceGroup().id, deployment().name)]",
    "commonTags": {
      "env": "[parameters('environment')]",
      "owner": "mentor-demo",
      "costCenter": "lab"
    },
    "stgName": "[toLower(format('st{0}{1}', parameters('baseName'), variables('hash')))]",
    "kvName": "[toLower(format('kv{0}{1}', parameters('baseName'), variables('hash')))]",
    "planName": "[format('{0}-plan', parameters('baseName'))]",
    "webAppName": "[format('{0}-web-{1}', parameters('baseName'), variables('hash'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-04-01",
      "name": "[variables('stgName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "allowBlobPublicAccess": false,
        "minimumTlsVersion": "TLS1_2"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[variables('kvName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "properties": {
        "enableRbacAuthorization": false,
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "softDeleteRetentionInDays": 7,
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[parameters('deployerObjectId')]",
            "permissions": {
              "secrets": [
                "get",
                "list",
                "set",
                "delete",
                "purge"
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/storage-conn', variables('kvName'))]",
      "properties": {
        "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', variables('stgName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('stgName')), '2023-04-01').keys[0].value)]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('kvName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('stgName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2023-12-01",
      "name": "[variables('planName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "sku": {
        "name": "B1",
        "tier": "Basic",
        "size": "B1",
        "family": "B",
        "capacity": 1
      },
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-12-01",
      "name": "[variables('webAppName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "linuxFxVersion": "NODE|18-lts",
          "ftpsState": "FtpsOnly",
          "minTlsVersion": "1.2",
          "appSettings": [
            {
              "name": "STORAGE_CONN",
              "value": "[format('@Microsoft.KeyVault(SecretUri=https://{0}.vault.azure.net/secrets/storage-conn)', variables('kvName'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('kvName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/add', variables('kvName'))]",
      "properties": {
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('webAppName')), '2023-12-01', 'full').identity.principalId]",
            "permissions": {
              "secrets": [
                "get",
                "list"
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('webAppName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('kvName'))]"
      ]
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[variables('stgName')]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[variables('kvName')]"
    },
    "keyVaultUri": {
      "type": "string",
      "value": "[format('https://{0}.vault.azure.net/', variables('kvName'))]"
    },
    "webAppName": {
      "type": "string",
      "value": "[variables('webAppName')]"
    },
    "webAppUrl": {
      "type": "string",
      "value": "[format('https://{0}.azurewebsites.net', variables('webAppName'))]"
    }
  }
}