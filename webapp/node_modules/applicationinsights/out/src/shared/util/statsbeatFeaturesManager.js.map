{"version":3,"file":"statsbeatFeaturesManager.js","sourceRoot":"","sources":["../../../../src/shared/util/statsbeatFeaturesManager.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\n\r\nimport { AZURE_MONITOR_STATSBEAT_FEATURES } from \"../../types\";\r\nimport { StatsbeatFeature, StatsbeatInstrumentation } from \"../../shim/types\";\r\n\r\n/**\r\n * Interface for statsbeat features configuration\r\n */\r\ninterface StatsbeatFeaturesConfig {\r\n    instrumentation: number;\r\n    feature: number;\r\n}\r\n\r\n/**\r\n * Utility class to manage statsbeat features using bitmap flags\r\n */\r\nexport class StatsbeatFeaturesManager {\r\n    private static instance: StatsbeatFeaturesManager;\r\n\r\n    /**\r\n     * Get the singleton instance of StatsbeatFeaturesManager\r\n     */\r\n    public static getInstance(): StatsbeatFeaturesManager {\r\n        if (!StatsbeatFeaturesManager.instance) {\r\n            StatsbeatFeaturesManager.instance = new StatsbeatFeaturesManager();\r\n        }\r\n        return StatsbeatFeaturesManager.instance;\r\n    }\r\n\r\n    /**\r\n     * Get the current statsbeat features configuration from environment variable\r\n     */\r\n    private getCurrentConfig(): StatsbeatFeaturesConfig {\r\n        const envValue = process.env[AZURE_MONITOR_STATSBEAT_FEATURES];\r\n        if (envValue) {\r\n            try {\r\n                return JSON.parse(envValue);\r\n            } catch (error) {\r\n                // If parsing fails, return default values\r\n                return {\r\n                    instrumentation: StatsbeatInstrumentation.NONE,\r\n                    feature: StatsbeatFeature.SHIM\r\n                };\r\n            }\r\n        }\r\n        return {\r\n            instrumentation: StatsbeatInstrumentation.NONE,\r\n            feature: StatsbeatFeature.SHIM\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Set the statsbeat features environment variable with updated configuration\r\n     */\r\n    private setConfig(config: StatsbeatFeaturesConfig): void {\r\n        process.env[AZURE_MONITOR_STATSBEAT_FEATURES] = JSON.stringify(config);\r\n    }\r\n\r\n    /**\r\n     * Enable a specific statsbeat feature by setting the corresponding bit\r\n     */\r\n    public enableFeature(feature: StatsbeatFeature): void {\r\n        const currentConfig = this.getCurrentConfig();\r\n        currentConfig.feature |= feature; // Use bitwise OR to set the bit\r\n        this.setConfig(currentConfig);\r\n    }\r\n\r\n    /**\r\n     * Disable a specific statsbeat feature by clearing the corresponding bit\r\n     */\r\n    public disableFeature(feature: StatsbeatFeature): void {\r\n        const currentConfig = this.getCurrentConfig();\r\n        currentConfig.feature &= ~feature; // Use bitwise AND with NOT to clear the bit\r\n        this.setConfig(currentConfig);\r\n    }\r\n\r\n    /**\r\n     * Check if a specific statsbeat feature is enabled\r\n     */\r\n    public isFeatureEnabled(feature: StatsbeatFeature): boolean {\r\n        const currentConfig = this.getCurrentConfig();\r\n        return (currentConfig.feature & feature) !== 0;\r\n    }\r\n\r\n    /**\r\n     * Enable a specific statsbeat instrumentation by setting the corresponding bit\r\n     */\r\n    public enableInstrumentation(instrumentation: StatsbeatInstrumentation): void {\r\n        const currentConfig = this.getCurrentConfig();\r\n        currentConfig.instrumentation |= instrumentation; // Use bitwise OR to set the bit\r\n        this.setConfig(currentConfig);\r\n    }\r\n\r\n    /**\r\n     * Disable a specific statsbeat instrumentation by clearing the corresponding bit\r\n     */\r\n    public disableInstrumentation(instrumentation: StatsbeatInstrumentation): void {\r\n        const currentConfig = this.getCurrentConfig();\r\n        currentConfig.instrumentation &= ~instrumentation; // Use bitwise AND with NOT to clear the bit\r\n        this.setConfig(currentConfig);\r\n    }\r\n\r\n    /**\r\n     * Check if a specific statsbeat instrumentation is enabled\r\n     */\r\n    public isInstrumentationEnabled(instrumentation: StatsbeatInstrumentation): boolean {\r\n        const currentConfig = this.getCurrentConfig();\r\n        return (currentConfig.instrumentation & instrumentation) !== 0;\r\n    }\r\n\r\n    /**\r\n     * Initialize the statsbeat features environment variable with default values if not set\r\n     */\r\n    public initialize(): void {\r\n        if (!process.env[AZURE_MONITOR_STATSBEAT_FEATURES]) {\r\n            this.setConfig({\r\n                instrumentation: StatsbeatInstrumentation.NONE,\r\n                feature: StatsbeatFeature.SHIM\r\n            });\r\n        }\r\n    }\r\n}\r\n"]}