"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.RequestSpanProcessor = void 0;
const api_1 = require("@opentelemetry/api");
/**
 * Azure Monitor Incoming & Outgoing Request Processor.
 * @internal
 */
class RequestSpanProcessor {
    constructor(enableDependencyTelemetry, enableRequestTelemetry) {
        this._enableDependencyTelemetry = enableDependencyTelemetry;
        this._enableRequestTelemetry = enableRequestTelemetry;
    }
    forceFlush() {
        return Promise.resolve();
    }
    onStart(span, _context) {
        if (this._enableDependencyTelemetry === false) {
            if (span.kind === api_1.SpanKind.CLIENT || span.kind === api_1.SpanKind.PRODUCER) {
                span.spanContext().traceFlags = api_1.TraceFlags.SAMPLED;
            }
        }
        if (this._enableRequestTelemetry === false) {
            if (span.kind === api_1.SpanKind.SERVER || span.kind === api_1.SpanKind.CONSUMER) {
                span.spanContext().traceFlags = api_1.TraceFlags.SAMPLED;
            }
        }
    }
    onEnd(span) {
        return;
    }
    shutdown() {
        return Promise.resolve();
    }
}
exports.RequestSpanProcessor = RequestSpanProcessor;
//# sourceMappingURL=requestProcessor.js.map