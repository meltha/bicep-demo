"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StatusLogger = void 0;
const os = __importStar(require("os"));
const fileWriter_1 = require("./writers/fileWriter");
const types_1 = require("../types");
const types_2 = require("../../types");
class StatusLogger {
    constructor(instrumentationKey, agentLogger = console) {
        this._agentLogger = agentLogger;
        this._instrumentationKey = instrumentationKey;
        this._language = types_1.LOGGER_LANGUAGE;
        this._sdkVersion = types_2.APPLICATION_INSIGHTS_OPENTELEMETRY_VERSION;
        this._machineName = os.hostname();
        this._processId = String(process.pid);
    }
    logStatus(status, cb) {
        this._addCommonProperties(status);
        if (typeof cb === "function" && this._agentLogger instanceof fileWriter_1.FileWriter) {
            this._agentLogger.callback = cb;
        }
        this._agentLogger.log(status);
    }
    _addCommonProperties(status) {
        status.AppType = this._language;
        status.MachineName = this._machineName;
        status.PID = this._processId;
        status.SdkVersion = this._sdkVersion;
        status.Ikey = this._instrumentationKey;
    }
}
exports.StatusLogger = StatusLogger;
//# sourceMappingURL=statusLogger.js.map