import type { Attributes, Context } from "@opentelemetry/api";
/**
 * Computes a deterministic hash code from a string input (typically a trace ID)
 * and returns a value between 0 and 100 for sampling decisions.
 *
 * This function replicates the C# hash algorithm used in Application Insights
 * to ensure consistent sampling decisions across different SDKs and languages.
 * The same trace ID will always produce the same hash value, enabling
 * distributed sampling where all spans in a trace are sampled consistently.
 *
 * @param input - The input string to hash (usually a trace ID)
 * @returns A number between 0 and 100 representing the hash-based sampling score
 */
export declare function getSamplingHashCode(input: string): number;
export declare function roundDownToNearest(samplingPercentage: number): number;
export declare function shouldSample(samplePercentage: number, context: Context, traceId: string, attributes: Attributes): boolean;
//# sourceMappingURL=samplingUtils.d.ts.map